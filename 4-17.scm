#lang racket

; たぶん、変換前は別々のフレームができる
; f: u
; f: v
;
; で、変換後は同じフレームにのる
; f: u v
;
; と思うんだけど、「余計なフレーム」とは…?

; letは内部でlambda呼び出しに変換されるのだけど、
; そのために余分なフレームができる、ということらしい。

; lambdaの評価時には常にフレームが作られて、
; 本来は外側の(varsの)lambdaのフレームで完結するんだけど
; 内側の(let評価時の)lambdaのフレームができてそっちにuとvが載るので
; 外側が使われなくて無駄ですねーみたいな感じかな?

; これをなんとかするには… いろいろ方法があるだろうけど
; どうするのがいいんだろうなあ
